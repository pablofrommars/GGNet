@page "/spark"

@using GGNet
@using GGNet.Palettes
@using GGNet.Components

@using Table.Net

<Table Loader="Loader" Context="continent" Small=true>
    <Loading><p>Loading...</p></Loading>
    <Header>
        <Column Field="Name" Label="Continent" Sortable=true />
        <Column Label="Trend" />
        <Column Label="Change" />
    </Header>
    <Row>
        @{ 
            var (spark1, spark2) = sparks[continent.Name];
        }
        <Cell>@continent.Name</Cell>
        <Cell>
            <div style="width: 150px; height: 50px;">
                <SparkLine Data=@spark1 T=Point TX=Double TY=Double />
            </div>
        </Cell>
        <Cell>
            <div style="width: 150px; height: 50px;">
                <SparkLine Data=@spark2 T=Point TX=Double TY=Double RenderPolicy=RenderPolicy.Never  />
            </div>
        </Cell>
    </Row>
</Table>

@code {

    List<Continent> Continents = new List<Continent>();

    Dictionary<string, (Data<Point, double, double> spark1, Data<Point, double, double> spark2)> sparks
        = new Dictionary<string, (Data<Point, double, double> spark1, Data<Point, double, double> spark2)>();

    protected override void OnInitialized()
    {
        Continents = (new[] { "Africa", "Asia", "Australia", "Europe", "North America", "South America" })
            .SelectMany(o => Enumerable.Range(0, 30).Select(i => new Continent { Name = o + i.ToString() }))
            .ToList();

        var N = 30;

        var rnd = new Random();

        foreach (var continent in Continents)
        {
            var points = new Point[N];
            var deltas = new Point[N - 1];
            var min = new Point();
            var max = new Point();

            points[0] = new Point();

            var cum = 0.0;

            for (var i = 1; i < N; i++)
            {
                var delta = Math.Sqrt(-2.0 * Math.Log(rnd.NextDouble())) * Math.Cos(2.0 * Math.PI * rnd.NextDouble());
                cum += delta;

                if (cum < min.Y)
                {
                    min.X = i;
                    min.Y = cum;
                }

                if (cum > max.Y)
                {
                    max.X = i;
                    max.Y = cum;
                }

                points[i] = new Point { X = i, Y = cum };
                deltas[i - 1] = new Point { X = i, Y = delta };
            }

            var spark1 = Plot.New(points, x: o => o.X, y: o => o.Y)
                .Geom_Line(color: "#000000")
                .Geom_Point(new[] { min }, x: o => o.X, y: o => o.Y, tooltip: o => $"{o.Y:N2}", color: "red", size: 3, animation: true)
                .Geom_Point(new[] { max }, x: o => o.X, y: o => o.Y, tooltip: o => $"{o.Y:N2}", color: "green", size: 3, animation: true)
                .Scale_Y_Continuous(expand: (0.1, 0, 0.1, 0))
                .Theme(dark: false);

            var spark2 = Plot.New(deltas, x: o => o.X, y: o => o.Y)
                .Geom_Bar(tooltip: o => $"{o.Y:N2}", position: PositionAdjustment.Dodge, animation: true)
                .Scale_Fill_Discrete(o => o.Y >= 0 ? 1 : -1, Discrete<int, string>.New(new[] { -1, 1 }, new[] { "red", "green" }), guide: false)
                .Theme(dark: false);

            sparks[continent.Name] = (spark1, spark2);
        }
    }

    private Task<IList<Continent>> Loader() => Task.FromResult(Continents as IList<Continent>);

    public class Continent
    {
        public string Name { get; set; }
    }

    public class Point
    {
        public double X { get; set; }
        public double Y { get; set; }
    }
}